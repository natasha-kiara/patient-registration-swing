/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.CardLayout;
import java.awt.Image;
import java.awt.image.BufferedImage;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import models.Patient;

/**
 *
 * @author kiara
 */
public class RegistrationForm extends javax.swing.JPanel {

    /**
     * Creates new form RegistrationForm
     */
    JPanel bottomPanel;
    private ImageIcon uploadedImage;
   
    public RegistrationForm(JPanel bottomPanel) {
        initComponents();
        this.bottomPanel = bottomPanel;

    }
    
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderGroup = new javax.swing.ButtonGroup();
        jTextField4 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        firstName = new javax.swing.JTextField();
        lastName = new javax.swing.JTextField();
        emailAddress = new javax.swing.JTextField();
        patientType = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        male = new javax.swing.JRadioButton();
        female = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        maritalStatus = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        photoLabel = new javax.swing.JLabel();
        uploadPhoto = new javax.swing.JButton();
        phoneNumber = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        message = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        registerBtn = new javax.swing.JButton();
        terms = new javax.swing.JCheckBox();
        age = new javax.swing.JTextField();

        jTextField4.setBackground(new java.awt.Color(255, 255, 255));
        jTextField4.setForeground(new java.awt.Color(0, 0, 0));

        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Phone Number");

        setBackground(new java.awt.Color(228, 228, 228));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Liberation Mono", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Patient Registration Form");

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Patient Type");

        firstName.setBackground(new java.awt.Color(255, 255, 255));
        firstName.setForeground(new java.awt.Color(0, 0, 0));

        lastName.setBackground(new java.awt.Color(255, 255, 255));
        lastName.setForeground(new java.awt.Color(0, 0, 0));

        emailAddress.setBackground(new java.awt.Color(255, 255, 255));
        emailAddress.setForeground(new java.awt.Color(0, 0, 0));

        patientType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "New", "Inpatient", "Outpatient", "Emergency" }));

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("First Name");

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Last Name");

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Gender");

        male.setForeground(new java.awt.Color(0, 0, 0));
        male.setText("Male");
        male.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleActionPerformed(evt);
            }
        });

        female.setForeground(new java.awt.Color(0, 0, 0));
        female.setText("Female");
        female.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleActionPerformed(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Age");

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Marital Status");

        maritalStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Single", "Married", "Divorced" }));

        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Email");

        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Message");

        photoLabel.setForeground(new java.awt.Color(0, 0, 0));
        photoLabel.setText("Photo");

        uploadPhoto.setText("Upload Photo");
        uploadPhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadPhotoActionPerformed(evt);
            }
        });

        phoneNumber.setBackground(new java.awt.Color(255, 255, 255));
        phoneNumber.setForeground(new java.awt.Color(0, 0, 0));

        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("Phone Number");

        message.setBackground(new java.awt.Color(255, 255, 255));
        message.setColumns(20);
        message.setForeground(new java.awt.Color(0, 0, 0));
        message.setRows(5);
        jScrollPane1.setViewportView(message);

        jButton2.setText("Cancel");

        registerBtn.setText("Register");
        registerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerBtnActionPerformed(evt);
            }
        });

        terms.setForeground(new java.awt.Color(0, 0, 0));
        terms.setText("I agree to the terms and conditions stipulated");

        age.setBackground(new java.awt.Color(255, 255, 255));
        age.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(photoLabel)
                            .addComponent(uploadPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel13)
                            .addComponent(jLabel11)
                            .addComponent(patientType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(firstName, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                                        .addGap(61, 61, 61)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(male, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(89, 89, 89)
                                .addComponent(female, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(maritalStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(terms)
                            .addComponent(emailAddress)
                            .addComponent(phoneNumber)
                            .addComponent(jScrollPane1)
                            .addComponent(age)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(130, 130, 130)
                        .addComponent(registerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(101, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patientType, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(male)
                    .addComponent(female))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(maritalStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(photoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(uploadPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(emailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(phoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(terms)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(815, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    private boolean validateInputs(JTextField field, String fieldName){
        if(field.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, fieldName+" " + "is required","Empty "+fieldName, JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(field.equals(emailAddress)){
            //email format using regex
            String emailFormat = "^[A-Za-z0-9+-._]+@[A-Za-z0-9+.-]+$";
            //if email does not match format display error
            if(!field.getText().matches(emailFormat)){
                JOptionPane.showMessageDialog(this, "Enter a Valid Email Address","Incorrect Emaill Format", JOptionPane.ERROR_MESSAGE);
                return false;
            }
            
        }
        if(field.equals(phoneNumber)){
            //phone number format
            String phoneFormat = "^[0-9]{10}$";
            //show error if phone number does not match format
            if(!field.getText().matches(phoneFormat)){
                JOptionPane.showMessageDialog(this, "Enter a Valid Canadian Number","Incorrect Phone Format", JOptionPane.ERROR_MESSAGE);
                return false; 
            }
        }
        
        return true;
        
    }
    
    private boolean validateDropdowns(JComboBox field, String fieldName){
        if(field.getSelectedItem().toString().isEmpty()){
          JOptionPane.showMessageDialog(this, fieldName+" " + " is required","Empty "+fieldName, JOptionPane.ERROR_MESSAGE);
          return false;   
        }
        
        return true;
    
    }
      //return true or false if age is an integer
    private boolean validateNumberInputs(JTextField field, String fieldName){
        //validate if field is an integer. if not show error message
        try{
         Integer.parseInt(field.getText());
         
        }catch(NumberFormatException e){
          JOptionPane.showMessageDialog(this,"Enter a Valid " + fieldName,"Missing/ Incorrect value format",  JOptionPane.ERROR_MESSAGE);
          return false;

        }
        return true;
    }
    
     private Patient getUserInputs(){
         String selectedGender ="";
         if(male.isSelected()){
             selectedGender = "Male";
         }
         else if(female.isSelected()){
             selectedGender = "Female";
         }
         return new Patient(
                  //get the uploaded image
                uploadedImage,
                patientType.getSelectedItem().toString(),
                 //add trim to remove whitespaces
                firstName.getText().trim(),
                lastName.getText().trim(),
                maritalStatus.getSelectedItem().toString(),
                emailAddress.getText().trim(),
                phoneNumber.getText().trim(),
                selectedGender,
                Integer.parseInt(age.getText()),
                message.getText().trim(),
                terms.isSelected()
                
        );
     }
     
    private void registerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerBtnActionPerformed
         //validate patient type
        if(!validateDropdowns(patientType , "Patient Type"))return;
        //validate first name
        if(!validateInputs(firstName , "First Name"))return;
        //validate last name
        if(!validateInputs(lastName , "Last Name"))return;
         //validate gender
        if(!male.isSelected() && !female.isSelected()){
          JOptionPane.showMessageDialog(this,"Please select a gender", "Gender not selected",JOptionPane.ERROR_MESSAGE); 
           return;   
        }
         //validate marital status
        if(!validateDropdowns(maritalStatus , "Marital Status"))return;
       
        //validate email address
        if(!validateInputs(emailAddress , "Email Address"))return;
        //validate phone number
        if(!validateInputs(phoneNumber , "Phone Number"))return;
         //validate age
        if(!validateNumberInputs(age , "Age"))return;
        //validate message
        if(message.getText().isEmpty()){
           JOptionPane.showMessageDialog(this, "Message is required","Empty Message",JOptionPane.ERROR_MESSAGE); 
           return;
        }
        
        //validate terms
        if(!terms.isSelected()){
           JOptionPane.showMessageDialog(this, "You must agree to terms and condtions"); 
           return;
        }
       
        //validate image
        if(uploadedImage == null){
           JOptionPane.showMessageDialog(this, "Please upload a photo","Image Required",JOptionPane.ERROR_MESSAGE); 
           return;
        }
        //after validation is done get all user inputs
        Patient patient = getUserInputs();
        PatientDetails patientDetails = new PatientDetails(patient);
       bottomPanel.add(patientDetails);
       CardLayout cl =(CardLayout) bottomPanel.getLayout();
       cl.next(bottomPanel);
        
    }//GEN-LAST:event_registerBtnActionPerformed

    private void uploadPhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadPhotoActionPerformed
        JFileChooser profilePic  = new JFileChooser();
         if (profilePic.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
        try {
            BufferedImage img = ImageIO.read(profilePic.getSelectedFile());
            Image edited_image = img.getScaledInstance(60, 80,Image.SCALE_SMOOTH);
            if (edited_image != null) {
           
            photoLabel.setText(profilePic.getSelectedFile().getAbsolutePath());
            //add the image to the uploadedImage 
            uploadedImage = new ImageIcon(edited_image);
             //System.out.print(edited_image);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Please upload image correctly.", "Error - Incorrect image", JOptionPane.ERROR_MESSAGE);
             ex.printStackTrace();
        }
        }
    }//GEN-LAST:event_uploadPhotoActionPerformed

    private void maleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maleActionPerformed

    private void femaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_femaleActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField age;
    private javax.swing.JTextField emailAddress;
    private javax.swing.JRadioButton female;
    private javax.swing.JTextField firstName;
    private javax.swing.ButtonGroup genderGroup;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField lastName;
    private javax.swing.JRadioButton male;
    private javax.swing.JComboBox<String> maritalStatus;
    private javax.swing.JTextArea message;
    private javax.swing.JComboBox<String> patientType;
    private javax.swing.JTextField phoneNumber;
    private javax.swing.JLabel photoLabel;
    private javax.swing.JButton registerBtn;
    private javax.swing.JCheckBox terms;
    private javax.swing.JButton uploadPhoto;
    // End of variables declaration//GEN-END:variables
}
